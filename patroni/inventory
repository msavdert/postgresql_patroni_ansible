# The specified ip addresses will be used to listen by the cluster components.

# "postgresql_exists='true'" if PostgreSQL is already exists and running
# "hostname=" variable is optional (used to change the server name)
# "new_node=true" to add a new server to an existing cluster using the add_pgnode.yml playbook

# In this example, all components will be installed on PostgreSQL nodes.
# You can deploy the haproxy balancers and the etcd or consul cluster on other dedicated servers (recomended).

# if dcs_exists: false and dcs_type: "etcd"
[etcd_cluster]  # recommendation: 3, or 5-7 nodes
10.0.0.11
10.0.0.12
10.0.0.13

# if with_haproxy_load_balancing: true
[balancers]
10.0.0.11
10.0.0.12
10.0.0.13
#10.128.64.144 new_node=true

# PostgreSQL nodes
[master]
10.0.0.11 hostname=patroni01 postgresql_exists=false ansible_ssh_private_key_file=/Users/melihsavdert/ansible-examples/patroni/.vagrant/machines/patroni01/virtualbox/private_key

[replica]
10.0.0.12 hostname=patroni02 postgresql_exists=false ansible_ssh_private_key_file=/Users/melihsavdert/ansible-examples/patroni/.vagrant/machines/patroni02/virtualbox/private_key
10.0.0.13 hostname=patroni03 postgresql_exists=false ansible_ssh_private_key_file=/Users/melihsavdert/ansible-examples/patroni/.vagrant/machines/patroni03/virtualbox/private_key
#10.128.64.144 hostname=pgnode04 postgresql_exists=false new_node=true

[postgres_cluster:children]
master
replica

# Connection settings
[all:vars]
ansible_connection='ssh'
ansible_ssh_port='22'
ansible_user='vagrant'
#ansible_ssh_pass='secretpassword'  # "sshpass" package is required for use "ansible_ssh_pass"
#ansible_ssh_private_key_file=
#ansible_python_interpreter='/usr/bin/python3'  # is required for use python3